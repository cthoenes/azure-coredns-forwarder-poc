# This workflow build a coredns binary with the plugins defined in plugin.cfg.tmpl
# Additionally it will create an ARM Template to be used with Deploy to Azure buttons
name: Build coredns and ARM Template

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build_core_dns:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: Setup Go environment
        uses: actions/setup-go@v2.1.4
        with:
          # The Go version to download (if necessary) and use. Supports semver spec and ranges.
          go-version: 1.16 # optional
          
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
        name: Get Sources

      # Clone the CoreDNS Repository
      - name: Clone Coredns Repo
        run: 'git clone --depth 1 https://github.com/coredns/coredns.git'

      # Copy the Plugin Template file
      - name: Copy plugin.cfg.tmpl
        run: 'cp ./corednsconfig/plugin.cfg.tmpl ./coredns/plugin.cfg'

      # Build Coredns with Alternate Plugin
      - name: Build Coredns with Alternate Plugin
        run: 'cd ./coredns/ && make'

      # Setup Bicep to build a ARM Template from the Bicep Configuration
      - name: Setup Bicep
        uses: anthony-c-martin/setup-bicep@v0.1

      # Build ARM Template to be used with a Deploy to Azure Button
      - name: Build Bicep
        run: bicep build ./iac/main.bicep     

      - name: Create Release
  # You may pin to the exact commit or the version.
  # uses: ncipollo/release-action@40bb172bd05f266cf9ba4ff965cb61e9ee5f6d01
        uses: ncipollo/release-action@v1.9.0
        with:
          # An optional flag which indicates if we should update a release if it already exists. Defaults to false.
          allowUpdates: true
          # An optional flag which indicates if artifact read or upload errors should fail the build.
          artifactErrorsFailBuild: true 
          # An optional set of paths representing artifacts to upload to the release. This may be a single path or a comma delimited list of paths (or globs)
          artifacts: ./coredns/coredns, ./iac/main.json
          # An optional body file for the release. This should be the path to the file
          bodyFile: './release/releasebody.md' # optional, default is 
          # Indicates if release notes should be automatically generated.
          generateReleaseNotes: false # optional, default is false
          # An optional name for the release. If this is omitted the tag will be used.
          name: coredns-${{ github.run_number }} # optional, default is 
          # Indicates if existing release artifacts should be removed, Defaults to false.
          removeArtifacts: true # optional, default is false
          # Indicates if existing release artifacts should be replaced. Defaults to true.
          replacesArtifacts: true # optional, default is true
          # An optional tag for the release. If this is omitted the git ref will be used (if it is a tag).
          tag: coredns-${{ github.run_number }} # optional, default is 
